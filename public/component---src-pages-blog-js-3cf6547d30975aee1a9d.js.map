{"version":3,"file":"component---src-pages-blog-js-3cf6547d30975aee1a9d.js","mappings":"qLAOMA,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,sBAAAC,YAAA,eAAVF,CAAU,qCAMtBG,EAAOH,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,iBAAAC,YAAA,eAAVF,CAAU,gTACP,SAAAI,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,IAAI,IAQ3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,SAAS,IACvC,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,QAAQC,EAAE,IAQ/B,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,IAAI,IACpC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,SAAS,IAO/B,SAAAL,GAAK,OAAIA,EAAMC,MAAMO,MAAML,IAAI,IAI5CM,GAAab,EAAAA,EAAAA,SAAOc,EAAAA,MAAKC,WAAA,CAAAd,YAAA,uBAAAC,YAAA,eAAZF,CAAY,2BAmB/B,EAdiB,SAAHgB,GAAiC,IAA3BC,EAAWD,EAAXC,YAAaC,EAAMF,EAANE,OAG/B,OACEC,EAAAA,cAACpB,EAAS,KACRoB,EAAAA,cAACN,EAAU,CAACO,GAAIF,EAAOG,MACrBF,EAAAA,cAAChB,EAAI,KACHgB,EAAAA,cAAA,UAAKF,EAAYK,OACjBH,EAAAA,cAAA,SAAIF,EAAYM,KAAK,MAAIL,EAAOM,YAAYC,QAKtD,ECrDM1B,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,yBAAAC,YAAA,gBAAVF,CAAU,yDAQtB0B,EAAU1B,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,uBAAAC,YAAA,gBAAVF,CAAU,MAwC1B,EArCoB,SAAHgB,GAAgC,IAA1BW,EAAIX,EAAJW,KAAIC,EAAAZ,EAAEa,OAAAA,OAAM,IAAAD,GAAMA,EACnCE,EAAQ,CAAC,EACb,IAAK,IAAIC,KAAOJ,EAAKK,MAAO,CAC1B,IAAIC,EAAON,EAAKK,MAAMD,GAClBG,EAAOD,EAAKhB,YAAYM,KAAKY,OAAO,GAClCD,KAAQJ,IACZA,EAAMI,GAAQ,IAEhBJ,EAAMI,GAAME,KAAKH,EACnB,CAGA,IAAII,EAAQC,OAAOC,KAAKT,GAAOU,OAAOC,UAGtC,SAASC,EAAYV,GACnB,OAAOA,EAAMW,KAAI,SAAAC,GAAA,IAAG3B,EAAW2B,EAAX3B,YAAaC,EAAM0B,EAAN1B,OAAM,OACrCC,EAAAA,cAAC0B,EAAQ,CAACC,IAAK7B,EAAYK,MAAOL,YAAaA,EAAaC,OAAQA,GAAU,GAElF,CAGA,IAAI6B,EAAU,KAOd,OALEA,EADElB,EACQQ,EAAMM,KAAI,SAACT,GAAI,OAAMf,EAAAA,cAAA,WAAKA,EAAAA,cAAA,UAAKe,GAAWQ,EAAYZ,EAAMI,IAAa,IAEzEQ,EAAYf,EAAKK,OAI7Bb,EAAAA,cAACpB,EAAS,KACRoB,EAAAA,cAACO,EAAO,KACLqB,GAIP,C,0EChDMhD,E,QAAYC,QAAAA,IAAAA,WAAU,CAAAC,YAAA,kBAAAC,YAAA,gBAAVF,CAAU,oBAiB5B,UAba,SAAHgB,GAAkB,IAAZW,EAAIX,EAAJW,KAEd,OACER,EAAAA,cAAC6B,EAAAA,EAAM,KACL7B,EAAAA,cAAC8B,EAAAA,EAAM,KACL9B,EAAAA,cAAA,aAAO,UAAQQ,EAAKuB,KAAKC,aAAa7B,QAExCH,EAAAA,cAACpB,EAAS,KACRoB,EAAAA,cAACiC,EAAAA,EAAW,CAACzB,KAAMA,EAAK0B,KAAMxB,QAAQ,KAI9C,C","sources":["webpack://PatrickYoussef/./src/components/BlogCard.js","webpack://PatrickYoussef/./src/components/BlogSection.js","webpack://PatrickYoussef/./src/pages/blog.js"],"sourcesContent":["// All the styling for a listing card for a particular post, you'll find these\n// in lists on the homepage and on \"All Posts\"\n\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  * {\n    margin: 0;\n  }\n  margin: 0.5rem 0rem;\n`\nconst Post = styled.div`\n  transition: ${props => props.theme.anims.main};\n  padding: 0.5rem;\n  border-style: solid;\n  border-width: 1px;\n  border-color: transparent;\n  border-radius: 0.5rem;\n\n  &:hover {\n    border-color: ${props => props.theme.colors.text_gray};\n    box-shadow: ${props => props.theme.shadows.s1};\n  }\n\n  &:hover p {\n    color: black;\n  }\n\n  p {\n    transition: ${props => props.theme.anims.main};\n    color: ${props => props.theme.colors.text_gray};\n    font-size: 1.1rem;\n    margin-bottom: 0;\n  }\n\n  h2,h3,h4 {\n    margin-bottom: 0rem;\n    font-family: ${props => props.theme.fonts.main};\n    font-weight: 400;\n  }\n`\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\n\n\nconst BlogCard = ({ frontmatter, fields }) => {\n  // console.log(frontmatter.tags)\n  // <p>{frontmatter.tags.sort().join(\" · \")}</p>\n  return (\n    <Container>\n      <StyledLink to={fields.path}>\n        <Post>\n          <h3>{frontmatter.title}</h3>\n          <p>{frontmatter.date} · {fields.readingTime.text}</p>\n        </Post>\n      </StyledLink>\n    </Container>\n  )\n}\nexport default BlogCard;","// Imports ListCard.js and iterated through the nodes that are passed into\n// here. This creates the list of blog posts on the home page and on the \n// \"All Posts\" page.\n\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport BlogCard from \"./BlogCard\"\n\nconst Container = styled.div`\n  h1,h2 {\n    font-weight: 400;\n    margin: 0rem\n  }\n  margin: 1rem 0rem;\n`\n\nconst Content = styled.div`\n`\n\nconst BlogSection = ({ data, _years=false }) => {\n  let pairs = {}\n  for (let idx in data.nodes) {\n    let post = data.nodes[idx]\n    let year = post.frontmatter.date.slice(-4)\n    if (!(year in pairs)) {\n      pairs[year] = []\n    }\n    pairs[year].push(post)\n  }\n\n  // Reversing order so that most recent is on top\n  let years = Object.keys(pairs).sort().reverse()\n\n  // Used to return blog cards for a set of posts passed\n  function print_cards(nodes) {\n    return nodes.map(({ frontmatter, fields }) => (\n      <BlogCard key={frontmatter.title} frontmatter={frontmatter} fields={fields} />\n    ))\n  }\n\n  // Determining what to fill based on whether years are present\n  var content = null\n  if (_years) {\n    content = years.map((year) => (<div><h1>{year}</h1>{print_cards(pairs[year])}</div>))\n  } else {\n    content = print_cards(data.nodes)\n  }\n  \n  return (\n  <Container>\n    <Content>\n      {content}\n    </Content>\n  </Container>\n  ) \n}\nexport default BlogSection;","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport Layout from \"../components/Layout\"\nimport BlogSection from \"../components/BlogSection\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  margin: 0 auto;\n`\n\nconst blog = ({ data }) => {\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Blog | {data.site.siteMetadata.title}</title>\n      </Helmet>\n      <Container>\n        <BlogSection data={data.blog} _years={true}/>\n      </Container>\n    </Layout>\n  )\n}\nexport default blog;\n\nexport const query = graphql`\n  query AllBlogPosts {\n    blog: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: {\n        frontmatter: {\n          templateKey: { eq: \"blog-post\" }\n          published: { eq: true }\n        }\n      }\n    ) {\n      nodes {\n        frontmatter {\n          slug\n          title\n          date(formatString: \"MMMM Do, YYYY\")\n          excerpt\n          tags\n        }\n        fields {\n          readingTime {\n            text\n          }\n          path\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    tags: allMdx(filter: {frontmatter: {published: {eq: true}, templateKey: {eq: \"blog-post\"}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`"],"names":["Container","styled","displayName","componentId","Post","props","theme","anims","main","colors","text_gray","shadows","s1","fonts","StyledLink","Link","withConfig","_ref","frontmatter","fields","React","to","path","title","date","readingTime","text","Content","data","_ref$_years","_years","pairs","idx","nodes","post","year","slice","push","years","Object","keys","sort","reverse","print_cards","map","_ref2","BlogCard","key","content","Layout","Helmet","site","siteMetadata","BlogSection","blog"],"sourceRoot":""}