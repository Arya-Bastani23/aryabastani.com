{"version":3,"file":"component---src-pages-projects-js-e037be4175d34ff73c16.js","mappings":"iMAQMA,GAAaC,EAAAA,EAAAA,SAAOC,EAAAA,MAAKC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAZJ,CAAY,2BAGzBK,EAAOL,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,qNAQL,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAS,IACvC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQC,EAAE,IAYzCC,EAAOZ,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,4DAMjBa,EAAYb,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,yBAAAC,YAAA,eAAVJ,CAAU,yPAoBV,SAAAM,GAAK,OAAIA,EAAMC,MAAMO,MAAMC,IAAI,IAK3CC,EAAOhB,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,4MAGL,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAS,IAEjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,MAAM,IAEtC,SAAAX,GAAK,OAAIA,EAAMC,MAAMO,MAAMC,IAAI,IAapC,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,SAAS,IAuBlD,EAlBoB,SAAHS,GAAiC,IAA3BC,EAAWD,EAAXC,YAAaC,EAAMF,EAANE,OAC9BC,GAAaC,EAAAA,EAAAA,GAASH,EAAYI,aAAaC,gBAAgBC,iBACnE,OACEC,EAAAA,cAACrB,EAAI,KACHqB,EAAAA,cAAC3B,EAAU,CAAC4B,GAAIP,EAAOQ,MACrBF,EAAAA,cAACd,EAAI,KACHc,EAAAA,cAACb,EAAS,CAACgB,UAAW,YACpBH,EAAAA,cAACI,EAAAA,EAAW,CAACD,UAAW,SAAUE,MAAOV,EAAYW,IAAKb,EAAYc,SAExEP,EAAAA,cAACV,EAAI,KACHU,EAAAA,cAAA,UAAKP,EAAYc,OACjBP,EAAAA,cAAA,SAAIP,EAAYe,KAAKC,OAAOC,KAAK,WAM7C,ECrGMC,EAAYrC,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,4BAAAC,YAAA,gBAAVJ,CAAU,MAGtBY,EAAOZ,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,2HAiBvB,EATuB,SAAHkB,GAAA,IAAOoB,EAAIpB,EAAJoB,KAAI,OAC7BZ,EAAAA,cAACW,EAAS,KACRX,EAAAA,cAACd,EAAI,KACF0B,EAAKC,MAAMC,KAAI,SAAAC,GAAA,IAAGtB,EAAWsB,EAAXtB,YAAaC,EAAMqB,EAANrB,OAAM,OACpCM,EAAAA,cAACgB,EAAW,CAACC,IAAKxB,EAAYc,MAAOd,YAAaA,EAAaC,OAAQA,GAAU,KAG3E,C,oFCfRiB,EAAYrC,EAAAA,QAAAA,IAAAA,WAAU,CAAAG,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,MAkB5B,UAhBiB,SAAHkB,GAAkB,IAAZoB,EAAIpB,EAAJoB,KAClB,OACEZ,EAAAA,cAACkB,EAAAA,EAAM,KACLlB,EAAAA,cAACmB,EAAAA,EAAM,KACLnB,EAAAA,cAAA,aAAO,cAAYY,EAAKQ,KAAKC,aAAad,QAE5CP,EAAAA,cAACW,EAAS,KACRX,EAAAA,cAACsB,EAAAA,EAAc,CACXV,KAAMA,EAAKW,QACXhB,MAAO,eACPiB,SAAU,GACVtB,KAAM,gBAIlB,C","sources":["webpack://PatrickYoussef/./src/components/ProjectCard.js","webpack://PatrickYoussef/./src/components/ProjectSection.js","webpack://PatrickYoussef/./src/pages/projects.js"],"sourcesContent":["// All the styling for a listing card for a particular post, you'll find these\n// in lists on the homepage and on \"All Posts\"\n\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\"\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`\nconst Card = styled.div`\n\n  width: 100%;\n  height: 180px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 0.5rem;\n  border-color: ${props => props.theme.colors.text_gray};\n  box-shadow: ${props => props.theme.shadows.s1};\n  overflow: hidden;\n\n  &:hover .bg_img:after {\n    background: rgba(24, 95, 184, 0.25);\n  }\n\n  &:hover p {\n    color: black;\n  }\n`\n\nconst Grid = styled.div`\n  display: grid;\n  height: 100%;\n  grid-template-rows: 2.5fr 1fr;\n`\n\nconst GridImage = styled.div`\n  margin: 0rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n\n  * {\n    width: 100%;\n    height: 100%;\n  }\n\n  .bg_img:after {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n    transition: ${props => props.theme.anims.main};\n    background: transparent;\n  }\n`\n\nconst Text = styled.div`\n  border-top-style: solid;\n  border-width: 1px;\n  border-color: ${props => props.theme.colors.text_gray};\n  padding: 0.4rem 0.5rem;\n  background-color: ${props => props.theme.colors.light1};\n  p {\n    transition: ${props => props.theme.anims.main};\n    font-size: 0.9rem;\n  }\n\n  h1,h2,h3,h4 {\n    font-weight: 400;\n  }\n\n  h2,h3,h4,p {\n    margin: 0;\n  }\n\n  p {\n    color: ${props => props.theme.colors.text_gray};\n  }\n`\n\n\nconst ProjectCard = ({ frontmatter, fields }) => {\n  let featureImg = getImage(frontmatter.featureImage.childImageSharp.gatsbyImageData)\n  return (\n    <Card>\n      <StyledLink to={fields.path}>\n        <Grid>\n          <GridImage className={'grid_img'}>\n            <GatsbyImage className={\"bg_img\"} image={featureImg} alt={frontmatter.title}/>\n          </GridImage>\n          <Text>\n            <h3>{frontmatter.title}</h3>\n            <p>{frontmatter.tags.sort().join(\" Â· \")}</p>\n          </Text>\n        </Grid>\n      </StyledLink>\n    </Card>   \n  )\n}\nexport default ProjectCard;","import React from \"react\"\nimport styled from \"styled-components\"\nimport ProjectCard from \"./ProjectCard\"\n\nconst Container = styled.div`\n`\n\nconst Grid = styled.div`\n    padding: 1rem 0;\n    margin: 0rem 0rem;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 1rem;\n`\n\nconst ProjectSection = ( { data } ) => (\n  <Container>\n    <Grid>\n      {data.nodes.map(({ frontmatter, fields }) => (\n        <ProjectCard key={frontmatter.title} frontmatter={frontmatter} fields={fields} />\n      ))}\n    </Grid>\n  </Container>\n)\nexport default ProjectSection;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Helmet } from \"react-helmet\"\nimport Layout from \"../components/Layout\"\nimport ProjectSection from \"../components/ProjectSection\"\n\nconst Container = styled.div`\n`\nconst projects = ({ data }) => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>Projects | {data.site.siteMetadata.title}</title>\n      </Helmet>\n      <Container>\n        <ProjectSection \n            data={data.project}\n            title={\"All Projects\"}\n            linktext={\"\"}\n            path={\"/projects/\"}/>\n      </Container>\n    </Layout>\n  )\n}\nexport default projects;\n\nexport const query = graphql`\n  query AllProjects {\n    project: allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: {\n        frontmatter: {\n          templateKey: { eq: \"project\" }\n          published: { eq: true }\n        }\n      }\n    ) {\n      nodes {\n        frontmatter {\n          slug\n          title\n          date(formatString: \"YYYY MMMM Do\")\n          excerpt\n          tags\n          featureImage {\n            childImageSharp {\n              gatsbyImageData(width:400, formats: JPG, placeholder: BLURRED)\n            }\n          }\n        }\n        fields {\n          readingTime {\n            text\n          }\n          path\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`"],"names":["StyledLink","styled","Link","withConfig","displayName","componentId","Card","props","theme","colors","text_gray","shadows","s1","Grid","GridImage","anims","main","Text","light1","_ref","frontmatter","fields","featureImg","getImage","featureImage","childImageSharp","gatsbyImageData","React","to","path","className","GatsbyImage","image","alt","title","tags","sort","join","Container","data","nodes","map","_ref2","ProjectCard","key","Layout","Helmet","site","siteMetadata","ProjectSection","project","linktext"],"sourceRoot":""}